import kotlinx.datetime.Instant;

CREATE TABLE cipherFilter (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  name TEXT NOT NULL,
  data TEXT NOT NULL,
  updatedAt INTEGER AS Instant NOT NULL,
  createdAt INTEGER AS Instant NOT NULL,
  type TEXT,
  icon TEXT
);

INSERT INTO cipherFilter(name, data, updatedAt, createdAt, type, icon)
VALUES (
  '',
  '',
  CAST(unixepoch('subsecond') * 1000 AS INTEGER),
  CAST(unixepoch('subsecond') * 1000 AS INTEGER),
  'login',
  NULL
);

INSERT INTO cipherFilter(name, data, updatedAt, createdAt, type, icon)
VALUES (
  '',
  '',
  CAST(unixepoch('subsecond') * 1000 AS INTEGER),
  CAST(unixepoch('subsecond') * 1000 AS INTEGER),
  'card',
  NULL
);

INSERT INTO cipherFilter(name, data, updatedAt, createdAt, type, icon)
VALUES (
  '',
  '',
  CAST(unixepoch('subsecond') * 1000 AS INTEGER),
  CAST(unixepoch('subsecond') * 1000 AS INTEGER),
  'identity',
  NULL
);

INSERT INTO cipherFilter(name, data, updatedAt, createdAt, type, icon)
VALUES (
  '',
  '',
  CAST(unixepoch('subsecond') * 1000 AS INTEGER),
  CAST(unixepoch('subsecond') * 1000 AS INTEGER),
  'note',
  NULL
);

INSERT INTO cipherFilter(name, data, updatedAt, createdAt, type, icon)
VALUES (
  '',
  '',
  CAST(unixepoch('subsecond') * 1000 AS INTEGER),
  CAST(unixepoch('subsecond') * 1000 AS INTEGER),
  'otp',
  NULL
);

update {
  UPDATE cipherFilter
  SET
    name = :name,
    data = :data,
    updatedAt = :updatedAt,
    createdAt = :createdAt
  WHERE
    id = :id;
}

rename {
  UPDATE cipherFilter
  SET
    name = :name
  WHERE
    id = :id;
}

insert {
  INSERT OR IGNORE INTO cipherFilter(name, data, updatedAt, createdAt, type, icon)
  VALUES (:name, :data, :updatedAt, :createdAt, NULL, :icon);
}

get:
SELECT *
FROM cipherFilter
ORDER BY createdAt DESC;

deleteAll:
DELETE FROM cipherFilter;

deleteByIds:
DELETE FROM cipherFilter
WHERE id IN (:ids);
